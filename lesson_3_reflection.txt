When would you want to use a remote repository rather than keeping all your work local?
  Remote repository are usefull to collaborate with several users on a project, ease sharing a project and provide a kind of backup. 
  Plus, you can access your files from another device.
  
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	Because merging local and remote repository nedd some work to resolve conflicts, one miht not want to deal with this in every commit.
	
Describe the differences between forks, clones, and branches. When would you use one instead of another?
	A branch is a different version of a project, a clone is a local copy of a project and a fork is the appropriation of a project.
	You branch for the reasons invoked in previous lesson. You clone if you want to contribute to a project and you fork if you want to make your proper version of a project.
	
What is the benefit of having a copy of the last known state of the remote stored locally?
	When you merge a commit into another, you compare it to their first common ancestor, which is this last local copy of the remote. It's quicker and save bandwidth.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	You have to code each set of dependant files seperately. You have to design modules and affect one people to each module. It's hard to have really independant modules but it's easier not having to deal with merging conflicts.
